# Read File Into Vector
snippet readfile
	std::vector<char> v;
	if (FILE *${2:fp} = fopen(${1:"filename"}, "r")) {
		char buf[1024];
		while (size_t len = fread(buf, 1, sizeof(buf), $2))
			v.insert(v.end(), buf, buf + len);
		fclose($2);
	}${3}
# std::map
snippet map
	std::map<${1:key}, ${2:value}> map${3};
# std::vector
snippet vector
	std::vector<${1:char}> v${2};
# Namespace
snippet ns
	namespace ${1:`Filename('', 'my')`} {
		${2}
	} /* $1 */
# Class
snippet cl
	class ${1:`Filename('$1_t', 'name')`} {
	public:
		$1 (${2:arguments});
		virtual ~$1 ();
	
	private:
		${3:/* data */}
	};

	
#cout normal
snippet co
	cout<<${1};
#cout special
snippet cou
	cout<<"${1: }"<<endl;
#cin
snippet	ci
	cin>>${1};
# #include<iostream>
snippet in
	#include <${1:iostream}>${2}
# #include<cstdio>
snippet ins
	#include <${1:cstdio}>${2}
# using namespace std; 
snippet us
	using namespace std;${1}
# vector <int> v;
snippet ve
	vector <${1:int}> ${2:v};${3}
# list <int> l;
snippet li
	list <${1:int}> ${2:l};${3}
	
# deque <int> d;
snippet de
	deque <${1:int}> ${2:d};${3}
# .begin()
snippet b
	begin();${1}
# .end()
snippet e
	end();${1}
# .push_back()
snippet p
	push_back(${1:v});${2}
# .push_forward()
snippet f
	push_forward(${1:v});${2}
# string s;
snippet st
	string ${1:str};${2}
#char 
snippet ch
	char 
#long 
snippet lo
	long
#float
snippet fl
	float
# char * arr = new char[n];
snippet chn
	char * ${1:arr} = new char [${2:n}];${3}
# Else If Condition
snippet eli
	else if (${1:/* condition */}) {
		${2:/* code */}
	}
# template <typename T>;
snippet tem
	template <typename ${1:T} >${2}
# common includes
snippet incl
	#include <iostream>
	#include <cstdio>
	#include <vector>
	#include <algorithm>
	#include <string>
	#include <limits>
	#include <iterator>
	#include <functional>
	#include <${1:cmath}>${2}
# forel
snippet forel
	for (${1:i} = ${2:v}.${3:begin()} ; $1 ${5:!=}$2.${6:end()} ; $1${4:++}) {
		${7:/* code */}
	}
#fore
snippet forv
	for (${1:vector}<${2:int}>::iterator ${3:i} = ${4:v}.begin(); $3 != $4.end(); ++$3) {
		${5:/* code */}
	}
#fort
snippet fori
	for(int ${1:i} = 0; $1 < ${2:count}; ++$1) {
		${3}
	}
#it
snippet it
	${1:vector}<${2:int}>::iterator ${3:itr}
#/*  */
snippet /
	/*${1:comment}*/${2}
#scanf("%d",&n);	
snippet sc
	scanf("%${1:d}",&${2:n});${3}
#printf("%d",n);
snippet pr
	printf("%${1:d}",${2:n});${3}
#spoj
snippet sp
	int $2;
	scanf("%${1:d}",&${2:n});
	while($2--)
	{
	${3}
	}
snippet frsi
	template <class TS> void frs(string s ,TS& d) {stringstream ss(s); ss>>d ;}
	${1}

snippet tosi
	template <class ST> string tos(ST x) {stringstream s; s<<x; return s.str();}
	${1}

snippet ss
	stringstream ${1:ss} ;${2}
snippet oi
	ostream_iterator<${1:int}> out(cout," ");${2}
snippet ii
	istream_iterator<${1:int}> in(cin);${2}
snippet fri
	freopen("input.txt","r",stdin);
	${1}
snippet fro
	freopen("output.txt","w",stdout);
	${1}
snippet s
	std:${1}


